networks:
  app-network:
    driver: bridge

volumes:
  celery_data:
  postgres_data:
  backend:
  backend_static:
  daphne_socket:
  backend_media:

services:
  db:
    image: "postgres:alpine"
    ports:
      - "5434:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.production
    env_file:
      - ./backend/.env # Updated path to the .env file
    ports:
      - "8000:8000"
    volumes:
      - backend:/techmentor/backend
      - backend_static:/backend/staticfiles
      - backend_media:/backend/media
    networks:
      - app-network
    depends_on:
      redis:
        condition: service_healthy
    command:
      [
        "daphne",
        "-u",
        "/tmp/daphne/daphne.sock",
        "--bind",
        "0.0.0.0",
        "--port",
        "8000",
        "backend.asgi:application",
      ]
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8000 || exit 1"]
      interval: 30s # Increased interval for slower startup times
      timeout: 10s # Give more time for response
      retries: 3

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile.production
    command: celery -A backend worker --loglevel=info
    env_file:
      - ./backend/.env # Updated path to the .env file
    volumes:
      - backend:/app/backend
      - backend_static:/backend/staticfiles
      - backend_media:/app/backend/media
      - celery_data:/app/celery_data
    depends_on:
      - redis
      - backend
    networks:
      - app-network

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile.production
    command: celery -A backend beat --loglevel=info
    env_file:
      - ./backend/.env # Updated path to the .env file
    volumes:
      - backend:/app/backend
      - backend_static:/backend/staticfiles
      - backend_media:/app/backend/media
      - celery_data:/app/celery_data
    depends_on:
      - redis
      - backend
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - backend_static:/backend/staticfiles
      - backend_media:/backend/media
      - daphne_socket:/tmp/daphne # Daphne socket
    depends_on:
      backend:
        condition: service_healthy # Ensures backend is ready
    networks:
      - app-network
