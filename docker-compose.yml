networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:

services:
  db:
    image: "postgres:alpine"
    ports:
      - '5434:5432'
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/app/frontend
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - DB_PORT=5432
    ports:
      - '8000:8000'
    volumes:
      - ./backend:/app/backend
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy