# FROM python:3.10-slim

# # Environment Variables (new format)
# ENV PYTHONUNBUFFERED=1
# ENV PYTHONDONTWRITEBYTECODE=1
# ENV PATH="/py/bin:$PATH"

# WORKDIR /app/backend

# # Copy requirements.txt
# COPY requirements.txt ./

# # Install dependencies (multi-stage build)
# RUN apt-get update && \
#     apt-get install -y --no-install-recommends gcc python3-dev libpq-dev curl libmagic1 libmagic-dev && \
#     pip install --no-cache-dir -r requirements.txt

# # Clean up build dependencies (optional)
# RUN apt-get clean && \
#     rm -rf /var/lib/apt/lists/*  # Remove package lists

# # Copy application code
# COPY . .

# # # Start the application
# # # CMD [ "python", "manage.py", "runserver", "0.0.0.0:8000" ]
# # CMD ["daphne", "-b", "0.0.0.0", "-p", "8000", "backend.asgi:application"]

# # Collect static files (assuming AWS S3 or similar is configured in Django settings)
# RUN python manage.py collectstatic --noinput

# # Copy the entrypoint script and make it executable
# COPY entrypoint.sh /entrypoint.sh
# RUN chmod +x /entrypoint.sh

# # Expose necessary ports
# EXPOSE 8000  
# EXPOSE 80    


# # Set the entrypoint
# ENTRYPOINT ["/entrypoint.sh"]


# Use the official Python image as the base
FROM python:3.10-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PATH="/py/bin:$PATH"

# Create a virtual environment
RUN python -m venv /py && /py/bin/pip install --upgrade pip

# Install system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends gcc python3-dev libpq-dev curl libmagic1 && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app/backend

# Copy and install requirements
COPY requirements.txt ./
RUN /py/bin/pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . .

# Collect static files
# RUN /py/bin/python manage.py collectstatic --noinput

# Copy entrypoint script
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Expose necessary ports
EXPOSE 8000

# Set entrypoint
ENTRYPOINT ["/entrypoint.sh"]
